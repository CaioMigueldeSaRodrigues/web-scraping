name: Python CI Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10"]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      uses: snok/install-poetry@v1

    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}

    - name: Install dependencies
      # if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true' # Desabilitado temporariamente para garantir instalação
      run: poetry install --no-interaction

    - name: Run Linter (Ruff)
      run: |
        poetry run ruff check .

    - name: Run Formatter Check (Ruff)
      run: |
        poetry run ruff format --check .

    - name: Run Type Checker (Mypy)
      run: |
        poetry run mypy src

    - name: Run Tests with Pytest
      run: |
        poetry run pytest 